@import url("https://fonts.googleapis.com/css2?family=Gabarito:wght@400;700;900&family=Fira+Mono:wght@400;500;700&family=Rubik:wght@300;400;500;600;700;900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --font-head: Rubik;
  --font-body: Gabarito;
  --font-mono: Fira Mono;

  --gradient-color-1: #ebe6f9;
  --gradient-color-2: #e2d4de;
  --gradient-color-3: #fba2d3;
  --gradient-color-4: #fce1ff;
}

:root[data-mode="dark"] {
  --gradient-color-1: #0e1201;
  --gradient-color-2: #0f1912;
  --gradient-color-3: #0a110d;
  --gradient-color-4: #082206;
}

#root-gradient {
  animation-name: fade-in;
  animation-duration: 2000ms;
  animation-delay: 50ms;
  animation-timing-function: ease-in;

  width: 100%;
  height: 100%;
  --gradient-color-1: #ebe6f9;
  --gradient-color-2: #e2d4de;
  --gradient-color-3: #fba2d3;
  --gradient-color-4: #fce1ff;
}

html[data-mode="dark"] #root-gradient {
  --gradient-color-1: #0e1201;
  --gradient-color-2: #0c1711;
  --gradient-color-3: #0a110d;
  --gradient-color-4: #082206;
}

@layer base {
  body {
    background-color: var(--gradient-color-4);

    @apply text-rose-950 dark:text-teal-100;
  }

  html {
    min-height: 100vh;
    font-family: var(--font-body);
  }

  h1,
  h2,
  h3 {
    font-family: var(--font-head);
  }
}

@layer components {
  .container {
    position: relative;
    border: solid 2px transparent;
    background-clip: padding-box;
    box-sizing: border-box;
    transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1);
  }

  .container::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    margin: -2px;
    border-radius: inherit;
    opacity: 0.5;
    background: linear-gradient(to bottom, #ffffffff, #ffffff00),
      linear-gradient(to bottom right, #ffffff2c, #d6e3f3dc);

    @apply backdrop-blur-lg;
  }

  :is([data-mode="dark"]) .container::before {
    background: linear-gradient(to bottom, #000000aa, #00000000),
      linear-gradient(to bottom left, #1023377c, #050c2a2c);
  }
}

@layer utilities {
  .appear {
    animation: fade-in normal 300ms ease-in;
  }
}

input.switch[type="checkbox"] {
  position: relative;
  appearance: none;
  margin: 0;
  font: inherit;
  color: currentColor;
  width: 2.5rem;
  height: 1.25rem;
  border-radius: 999px;
  transition: all 300ms ease-out;
  cursor: pointer;

  @apply isolate bg-pink-100 bg-gradient-to-br from-slate-400/10 to-pink-100 shadow-inner shadow-pink-300 dark:bg-emerald-800 dark:from-slate-400/10 dark:to-emerald-800 dark:shadow-green-900;
}

input.switch[type="checkbox"]:checked {
  @apply bg-pink-300 dark:bg-emerald-200;
}

input.switch[type="checkbox"]::before {
  content: "";
  width: 0.875rem;
  height: 0.875rem;
  position: absolute;
  top: 3px;
  left: 3px;
  border-radius: 2rem;
  transition: all 350ms ease-in-out;

  @apply bg-slate-300/60 shadow-sm shadow-slate-700/50 dark:bg-slate-50/30 dark:shadow-green-900;
}

input.switch[type="checkbox"]:checked::before {
  @apply bg-pink-50/90 shadow-fuchsia-400 dark:bg-green-50/90 dark:shadow-green-950;
  left: calc(100% - 0.875rem - 3px);
}

input.switch[type="checkbox"].theme::before {
  background-image: url("/img/theme/sun.svg");

  @apply bg-pink-600 shadow-fuchsia-600;
}

input.switch[type="checkbox"].theme:checked::before {
  background-image: url("/img/theme/evil-moon.svg");

  @apply dark:bg-green-950 dark:shadow-green-950;
}

input.arrow[type="checkbox"] {
  position: relative;
  appearance: none;
  margin: 0;
  font: inherit;
  color: currentColor;
  cursor: pointer;
  width: 100%;
  height: 100%;
  clip-path: polygon(50% 0, 100% 100%, 0 100%);
}

input.arrow[type="checkbox"]::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1rem;
  height: 1rem;
  transition: all 200ms ease-in;
  background-image: url("/icons/caret-lt.svg");
  background-position: 50% 50%;

  @apply pointer-events-none -translate-x-1/2 -translate-y-1/2 rotate-0 select-none stroke-pink-800 dark:stroke-green-200 dark:text-green-200 lg:-rotate-90;
}

:is([data-mode="dark"]) input.arrow[type="checkbox"]::before {
  background-image: url("/icons/caret-dk.svg");
}

input.arrow[type="checkbox"]:checked::before {
  @apply rotate-180 lg:rotate-90;
}

div.crash {
  transition:
    bottom 300ms ease-out,
    right 300ms ease-out,
    top 300ms ease-out;
}

div.crash:has(div > input:checked) {
  @apply top-full lg:-right-[383px] lg:bottom-0 lg:top-[unset];
}

@keyframes fade-in {
  0% {
    visibility: hidden;
    opacity: 0;
  }
  100% {
    visibility: visible;
    opacity: 1;
  }
}
